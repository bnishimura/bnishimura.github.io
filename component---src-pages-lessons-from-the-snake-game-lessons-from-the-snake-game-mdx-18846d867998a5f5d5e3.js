"use strict";(self.webpackChunkgatsby_starter_default=self.webpackChunkgatsby_starter_default||[]).push([[99],{4881:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return i},default:function(){return u}});var a=n(3366),o=(n(7294),n(4983)),s=n(5001),r=["components"],i={title:"Lessons from the snake game",path:"/lessons-from-the-snake-game",date:"2022-05-12",tags:["JavaScript","React"]},c={_frontmatter:i};function u(e){var t=e.components,n=(0,a.Z)(e,r);return(0,o.mdx)("wrapper",Object.assign({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.mdx)("p",null,"I've made onde of those old snake games as a first step to learn react:"),(0,o.mdx)("div",{className:"blog-post-content",style:{display:"flex",justifyContent:"center"}},(0,o.mdx)(s.Z,{mdxType:"SnakeGame"})),(0,o.mdx)("p",null,"It turns out react is not really a nice and clean way to make a game. Luckily, I wasn't looking\nfor a good game framework, but an opportunity to grok react."),(0,o.mdx)("p",null,"The main lesson is that react seems to create a new object for each render, forcing us to pass a new gameLoop\nafter each loop."),(0,o.mdx)("p",null,"State is a plain value that is injected into the component. Each component should be seen as a blueprint to\ncreate new objects with static values, with each new object being swapped into the DOM tree instead of a unique\nobject with variables changing inside of it."))}u.isMDXComponent=!0},3366:function(e,t,n){function a(e,t){if(null==e)return{};var n,a,o={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}n.d(t,{Z:function(){return a}})}}]);
//# sourceMappingURL=component---src-pages-lessons-from-the-snake-game-lessons-from-the-snake-game-mdx-18846d867998a5f5d5e3.js.map