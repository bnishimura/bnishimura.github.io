{"version":3,"file":"component---src-pages-index-js-b38a253cd1f739b5069f.js","mappings":"8NAsBA,EAjBa,SAACA,GACV,IAAMC,EAAOD,EAAME,SACnB,OACA,uBACIC,MAAO,CACHC,QAAQ,gBAGXH,EAAKI,KAAI,SAACC,GACP,OACI,uBAAKC,IAAKD,EAAKE,UAAU,QAAzB,IAAkCF,EAAlC,UCND,SAASG,EAAT,GAA0B,IAE/BC,EAF8B,EAARC,KAETC,OAAOC,MAE1B,OACI,gCACA,gBAACC,EAAA,EAAD,KACI,kDAGJ,gBAAC,IAAD,KACI,sBAAIN,UAAU,eACd,uBAAKA,UAAU,gBACVE,EACIK,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,YAAYC,MAAMC,OAAS,KACpDf,KAAI,YAAqB,IAAZW,EAAW,EAAjBC,KACJ,OACI,uBAAKT,UAAU,eAAeD,IAAKS,EAAKK,IACpC,0BACI,gBAAC,EAAAC,KAAD,CACIC,GAAIP,EAAKE,YAAYM,KACrBhB,UAAU,sBAETQ,EAAKE,YAAYC,QAG1B,uBAAKX,UAAU,oBACVQ,EAAKE,YAAYO,MAEtB,gBAAC,EAAD,KACMT,EAAKE,YAAYjB,MAEvB,yBAAIe,EAAKU","sources":["webpack://gatsby-starter-default/./src/components/tags.js","webpack://gatsby-starter-default/./src/pages/index.js"],"sourcesContent":["import React from \"react\"\r\nimport \"./tags.css\"\r\n\r\n\r\n// receives a tags array as children returns inlined tags\r\nconst Tags = (props) => {\r\n    const tags = props.children;\r\n    return (\r\n    <div\r\n        style={{\r\n            display: `flex-inline`,\r\n        }}\r\n    >\r\n        {tags.map((tag) => {\r\n            return (\r\n                <div key={tag} className=\"tags\"> {tag} </div>\r\n            )})\r\n        }\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Tags;\r\n","// home page stuff\r\nimport React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport { Helmet } from \"react-helmet\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Tags from \"../components/tags\"\r\nimport \"./index.css\"\r\n\r\nexport default function Index({ data }) {\r\n    // const { edges: posts } = data.allMdx\r\n    const posts = data.allMdx.edges;\r\n    let filtered_posts;\r\n    return (\r\n        <>\r\n        <Helmet>\r\n            <title>NishiWare - Home</title>\r\n        </Helmet>\r\n\r\n        <Layout>\r\n            <hr className=\"content-hr\" />\r\n            <div className=\"page-content\">\r\n                {posts\r\n                    .filter(post => post.node.frontmatter.title.length > 0)\r\n                    .map(({ node: post }) => {\r\n                        return (\r\n                            <div className=\"post-preview\" key={post.id}>\r\n                                <h1>\r\n                                    <Link \r\n                                        to={post.frontmatter.path}\r\n                                        className=\"post-preview-title\"\r\n                                    >\r\n                                        {post.frontmatter.title}\r\n                                    </Link>\r\n                                </h1>\r\n                                <div className=\"post-description\" >\r\n                                    {post.frontmatter.date} \r\n                                </div>\r\n                                <Tags>\r\n                                    { post.frontmatter.tags }\r\n                                </Tags>\r\n                                <p>{post.excerpt}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n            </div>\r\n        </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n    query IndexQuery {\r\n        allMdx(sort: { order: DESC, fields: [frontmatter___date] }) {\r\n            edges {\r\n                node {\r\n                    excerpt(pruneLength: 250)\r\n                    id\r\n                    frontmatter {\r\n                        title\r\n                        date(formatString: \"MMMM DD, YYYY\")\r\n                        tags\r\n                        path\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n"],"names":["props","tags","children","style","display","map","tag","key","className","Index","posts","data","allMdx","edges","Helmet","filter","post","node","frontmatter","title","length","id","Link","to","path","date","excerpt"],"sourceRoot":""}