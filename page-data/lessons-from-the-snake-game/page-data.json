{"componentChunkName":"component---src-templates-blog-post-js","path":"/lessons-from-the-snake-game","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Lessons from the snake game\",\n  \"path\": \"/lessons-from-the-snake-game\",\n  \"date\": \"2022-05-12\",\n  \"tags\": [\"JavaScript\", \"React\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I've made onde of those old snake games as a first step to learn react:\"), mdx(\"div\", {\n    className: \"blog-post-content\",\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    }\n  }, mdx(SnakeGame, {\n    mdxType: \"SnakeGame\"\n  })), mdx(\"p\", null, \"It turns out react is not really a nice and clean way to make a game. Luckily, I wasn't looking\\nfor a good game framework, but an opportunity to grok react.\"), mdx(\"p\", null, \"The main lesson is that react seems to create a new object for each render, forcing us to pass a new gameLoop\\nafter each loop.\"), mdx(\"p\", null, \"State is a plain value that is injected into the component. Each component should be seen as a blueprint to\\ncreate new objects with static values, with each new object being swapped into the DOM tree instead of a unique\\nobject with variables changing inside of it.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"date":"May 12, 2022","path":"/lessons-from-the-snake-game","title":"Lessons from the snake game"}}},"pageContext":{}},"staticQueryHashes":["3649515864"]}